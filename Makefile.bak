ENVFLAG :=
ifneq ("$(wildcard .env)","")
ENVFLAG := --env-file .env
endif

TF_VERSION ?= 1.9.5
TF_IMAGE := hashicorp/terraform:$(TF_VERSION)
CLOUD ?= azure
WORKDIR := /workspace

docker-run = docker run --rm -it $(ENVFLAG) -v $(PWD):$(WORKDIR) -w $(WORKDIR) $(TF_IMAGE)

ifeq ($(CLOUD),azure)
ENV_DIR := envs/azure/azure-b1s-mvp
else ifeq ($(CLOUD),aws)
ENV_DIR := envs/aws/aws-ec2-mvp
else
$(error Unsupported CLOUD: $(CLOUD). Use azure or aws)
endif

docker-init:
	$(docker-run) -chdir=$(ENV_DIR) init -backend-config=backend.hcl || true

docker-plan:
	$(docker-run) -chdir=$(ENV_DIR) plan

docker-apply:
	$(docker-run) -chdir=$(ENV_DIR) apply -auto-approve

docker-destroy:
	$(docker-run) -chdir=$(ENV_DIR) destroy -auto-approve

fmt:
	$(docker-run) fmt -recursive

validate: docker-init
	$(docker-run) -chdir=$(ENV_DIR) validate

# Azure one-click targets
up-azure:
	$(docker-run) -chdir=envs/azure/azure-b1s-mvp init -backend-config=backend.hcl || true
	$(docker-run) -chdir=envs/azure/azure-b1s-mvp plan
	$(docker-run) -chdir=envs/azure/azure-b1s-mvp apply -auto-approve

down-azure:
	$(docker-run) -chdir=envs/azure/azure-b1s-mvp destroy -auto-approve

app-deploy:
	docker run --rm $(ENVFLAG) -v $(PWD):/workspace -w /workspace mcr.microsoft.com/azure-cli \
		bash -c 'set -euo pipefail; \
		az login --service-principal -u "$$ARM_CLIENT_ID" -p "$$ARM_CLIENT_SECRET" --tenant "$$ARM_TENANT_ID"; \
		SA_NAME=$$(terraform -chdir=envs/azure/azure-b1s-mvp output -raw storage_account_name); \
		SRC_DIR=$${APP_DIR:-app/dist}; \
		[ -d "$$SRC_DIR" ] || SRC_DIR=app; \
		mkdir -p "$$SRC_DIR"; \
		[ -f "$$SRC_DIR/index.html" ] || echo "<h1>SRE IaC Starter</h1><p>Deployed: $$(date)</p>" > "$$SRC_DIR/index.html"; \
		az storage blob upload-batch --account-name "$$SA_NAME" -s "$$SRC_DIR" -d "$$web" --overwrite --auth-mode login; \
		az storage blob list --account-name "$$SA_NAME" -c "$$web" --auth-mode login --output table'

url-azure:
	$(docker-run) -chdir=envs/azure/azure-b1s-mvp output -raw static_website_url

help:
	@echo "Available targets:"
	@echo "  fmt                    - Format all Terraform files"
	@echo "  validate CLOUD=<cloud> - Validate Terraform configuration"
	@echo "  docker-init CLOUD=<cloud> - Initialize Terraform"
	@echo "  docker-plan CLOUD=<cloud> - Plan Terraform changes"
	@echo "  docker-apply CLOUD=<cloud> - Apply Terraform changes"
	@echo "  docker-destroy CLOUD=<cloud> - Destroy Terraform resources"
	@echo ""
	@echo "Azure one-click targets:"
	@echo "  up-azure               - Deploy Azure infrastructure (init/plan/apply)"
	@echo "  down-azure             - Destroy Azure infrastructure"
	@echo "  app-deploy             - Deploy static website to Azure Storage"
	@echo "  url-azure              - Show static website URL"
	@echo ""
	@echo "CLOUD options: azure, aws"
	@echo "Example: make validate CLOUD=azure"

.PHONY: help fmt validate docker-init docker-plan docker-apply docker-destroy up-azure down-azure app-deploy url-azure
