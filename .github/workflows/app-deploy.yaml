name: app-deploy
on:
  push:
    branches: [main]
    paths:
      - "app/**"
      - "app-landing/**"

permissions:
  contents: read

env:
  TFSTATE_RG: sre-iac-starter-tfstate-rg
  TFSTATE_LOC: japaneast
  TFSTATE_CONTAINER: tfstate
  TFSTATE_KEY: azure-b1s-mvp.tfstate

jobs:
  deploy-static-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId":"${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId":"${{ secrets.ARM_TENANT_ID }}"
            }

      # backendのSA/Containerが無いと init 失敗するため ensure（冪等）
      - name: Ensure tfstate backend resources
        env:
          TFSTATE_RG: ${{ env.TFSTATE_RG }}
          TFSTATE_LOC: ${{ env.TFSTATE_LOC }}
          TFSTATE_CONTAINER: ${{ env.TFSTATE_CONTAINER }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: |
          bash scripts/ci/ensure-tfstate.sh | tee ensure.log
          SA=$(grep '^TFSTATE_SA=' ensure.log | cut -d= -f2)
          echo "TFSTATE_SA=$SA" >> $GITHUB_ENV

      - name: Terraform Init (remote backend / read state)
        env:
          ARM_CLIENT_ID:        ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:    ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:        ${{ secrets.ARM_TENANT_ID }}
        run: |
          terraform -chdir=envs/azure/azure-b1s-mvp init \
            -backend-config="resource_group_name=${{ env.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ env.TFSTATE_SA }}" \
            -backend-config="container_name=${{ env.TFSTATE_CONTAINER }}" \
            -backend-config="key=${{ env.TFSTATE_KEY }}"

      - name: Resolve outputs
        id: out
        run: |
          set -euo pipefail

          TFDIR="envs/azure/azure-b1s-mvp"

          # 1) まず -raw で直接取得（stderr を捨てる）。失敗しても続行。
          SA_NAME="$(terraform -chdir="$TFDIR" output -raw storage_account_name 2>/dev/null || true)"
          WEB_URL="$(terraform -chdir="$TFDIR" output -raw static_website_url 2>/dev/null || true)"

          # 2) もし上が空なら -json を使って安全にパース（python を使用：GH runner にあり）
          if [ -z "$SA_NAME" ] || [ -z "$WEB_URL" ]; then
            # terraform output -json で JSON を取得（stderr を捨てる）
            OUT_JSON="$(terraform -chdir="$TFDIR" output -json 2>/dev/null || echo '{}')"

            if [ -z "$SA_NAME" ]; then
              SA_NAME="$(echo "$OUT_JSON" | python -c "import sys,json; j=json.load(sys.stdin); print(j.get('storage_account_name',{}).get('value',''))" 2>/dev/null || true)"
            fi

            if [ -z "$WEB_URL" ]; then
              WEB_URL="$(echo "$OUT_JSON" | python -c "import sys,json; j=json.load(sys.stdin); print(j.get('static_website_url',{}).get('value',''))" 2>/dev/null || true)"
            fi
          fi

          # 3) 安全化：先頭行だけ取り、改行やCRを除去
          SA_NAME="$(printf '%s' "$SA_NAME" | tr -d '\r' | head -n1 || true)"
          WEB_URL="$(printf '%s' "$WEB_URL" | tr -d '\r' | head -n1 || true)"

          # 4) 出力（必ず「name=value」の形式で書く）
          echo "sa_name=$SA_NAME" >> $GITHUB_OUTPUT
          echo "web_url=$WEB_URL" >> $GITHUB_OUTPUT

          # debug logs (optional) — comment out in production if noisy
          echo ">> debug: sa_name='$SA_NAME'"
          echo ">> debug: web_url='$WEB_URL'"


      - name: Upload to $web
        env:
          SA_NAME: ${{ steps.out.outputs.sa_name }}
        run: |
          SRC_DIR=""
          for d in "app-landing" "app/dist" "app"; do
            if [ -d "$d" ]; then SRC_DIR="$d"; break; fi
          done
          [ -n "$SRC_DIR" ] || SRC_DIR="app"
          mkdir -p "$SRC_DIR"
          if [ ! -f "$SRC_DIR/index.html" ]; then
            printf '%s\n' \
              "<!doctype html><meta charset=utf-8><title>SRE IaC Starter</title><h1>SRE IaC Starter</h1><p>Deployed: $(date -u +%FT%TZ)</p>" \
              > "$SRC_DIR/index.html"
          fi
          az storage blob upload-batch --account-name "$SA_NAME" -s "$SRC_DIR" -d '$web' --overwrite --auth-mode login
          echo "${{ steps.out.outputs.web_url }}"

